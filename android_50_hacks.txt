Views
    1.Centering views using weights
        LinearLayout’s android:weightSum
        view's android:layout_wegith

    2.Using lazy loading and avoiding replication
        ViewStub
        <include layout=@layout/layout.xml/>

    3.Creating a custom ViewGroup
        onMeasure();
        onLayout()

    4.Preferences hacks
        Custom

Animations
    5.Snappy transitions with TextSwitcher and ImageSwitcher
        (1)Get the view using findViewById(), or construct it in your code like any normal Android view.
        (2)Set a factory using switcher.setFactory().
        (3)Set an in-animation using switcher.setInAnimation().
        (4)Set an out-animation using switcher.setOutAnimation().

    6.Adding eye candy to your ViewGroup’s children
        LayoutAnimationController
        viewgroup.setLayoutAnimation(controller);

    7.doing animations over the Canvas
        Rectangle.move();
        Rectangle.draw();
        Rectangle.invalidate();

    8.Slideshow using the Ken Burns effect
        ObjectAnimation();
        AnimationListener --> onAnimationEnd();

View tips and tricks
    9.Avoiding date validations with an EditText for dates
        Button android:background="@android:drawable/edit_text"

    10.Formatting a TextView’s text
        mTextView1.setText(Html.fromHtml(text));
        mTextView1.setMovementMethod(LinkMovementMethod.getInstance());
        or
        Spannable sText = new SpannableString(mTextView2.getText());
        sText.setSpan(new BackgroundColorSpan(Color.RED), 1, 4, 0);
        sText.setSpan(new ForegroundColorSpan(Color.BLUE), 5, 9, 0);
        mTextView2.setText(sText);

    11.Adding text glowing effects
        LedText Typeface

    12.Rounded borders for backgrounds
        ShapeDrawables

    13.Getting the view’s width and height in the onCreate() method
        view.post(new Runnable() {
                @Override
                public void run() {
                    Log.d(TAG, "view has width: "+view.getWidth() +
                    " and height: "+view.getHeight());
                }
            });

    14.VideoViews and orientation changes
        android:configChanges="orientation"
        Override onConfigurationChanged()


    15.Removing the background to improve your Activity startup time
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
        <style name="Theme.NoBackground" parent="android:Theme">
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@null</item>
        </style>
        </resources>


    16.Toast’s position hack

        Toast toast = Toast.makeText(this, "Bottom Right!",Toast.LENGTH_SHORT);
        toast.setGravity(Gravity.BOTTOM | Gravity.RIGHT, 0, 0);
        toast.show();

    17.Creating a wizard form using a Gallery
        Gallery
        replace with HorizontalScrollView and ViewPager

    18.Removing log statements before releasing

        -assumenosideeffects class android.util.Log {
            public static *** d(...);
        }

    20.mvp
        Model-View-Presenter

    21.BroadcastReceiver following Activity’s lifecycle
       onResume()/onPause() registerReceiver()/unregisterReceiver()

    22.Architecture pattern using Android libraries

    23.The SyncAdapter pattern

Working with lists and adapters

    24.Handling empty lists
        listview.setEmptyView()//StubView

    25.Creating fast adapters with a ViewHolder

        cache item views so that shold not call findViewById everytime!

        public View getView(int position, View convertView, ViewGroup parent) {
            final ViewHolder viewHolder;
            if (convertView == null) {
                convertView = mInflater.inflate(R.layout.row_layout, parent, false);
                viewHolder = new ViewHolder();
                viewHolder.imageView = (ImageView)
                convertView.findViewById(R.id.image);
                viewHolder.text1 =
                (TextView) convertView.findViewById(R.id.text1);
                viewHolder.text2 =
                (TextView) convertView.findViewById(R.id.text2);
                convertView.setTag(viewHolder);
            } else {
                viewHolder = (ViewHolder) convertView.getTag();
            }

            Model model = getItem(position);
            viewHolder.imageView.setImageResource(model.getImage());
            viewHolder.text1.setText(model.getText1());
            viewHolder.text2.setText(model.getText2());
            return convertView;
        }

        static class ViewHolder {
            public ImageView imageView;
            public TextView text1;
            public TextView text2;
        }

    26.Adding section headers to a ListView



